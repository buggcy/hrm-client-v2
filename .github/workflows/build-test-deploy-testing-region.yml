name: Build/Test/Deploy to Testing Region
################################################
#### 1. Cloudfront distribution integration (dev)
#### 2. Only the latest workflow will run
on:
  push:
    branches:
      - main

concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: us-east-1
  BUCKET: tavus-developer-portal-dev

permissions:
  id-token: write
  contents: read

jobs:
  build-and-test-portal:
    if: ${{ github.event_name == 'push' }}
    name: build-and-test-portal
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tavus-engineering'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts --legacy-peer-deps
        env:
          NODE_AUTH_TOKEN: ${{ secrets.REGISTRY_PACKAGES_INSTALL }}
      - name: Run test
        run: npm test
      - name: Make build
        run: "npm run build"
      - name: Move directory
        run: |
              mkdir -p package
              mv build package/
      - name: Upload buid artifact
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: package
#      - name: Bump version and push tag
#        uses: anothrNick/github-tag-action@1.55.0 # Don't use @master unless you're happy to test the latest version
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          WITH_V: true
  DeployCloudFormation:
    if: ${{ github.event_name == 'push' }}
    name: DeployCloudFormation
    runs-on: ubuntu-latest
    needs: [build-and-test-portal]
    environment: dev

    steps:
      - uses: actions/checkout@v3

      - name: Get changed files for cloudformation
        id: CloudformationFilesChanged
        uses: tj-actions/changed-files@v41
        with:
            files: |
                cloudformation/template.yml
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-pipeline-execution
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: developer-portal-test
          template: ./cloudformation/template.yml
          no-fail-on-empty-changeset: "1"

  deploy-dev-portal:
    name: deploy-dev-portal
    runs-on: ubuntu-latest
    needs: [DeployCloudFormation]
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-pipeline-execution
          aws-region: ${{ env.AWS_REGION }}
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: Build
      - name: Deploy Build to dev S3
        run: |
              aws s3 sync build/  s3://${{ env.BUCKET }} --delete
      - name: Copy files to the dev website with the AWS CLI
        run: |
              DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[0]=='dev.developer-portal.tavus.io'].{id:Id}" --output text)
              aws cloudfront create-invalidation --distribution-id $DIST_ID --paths "/*" --output text   